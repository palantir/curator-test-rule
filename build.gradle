apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

version = "0.0.3"
group = "com.palantir"

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.apache.curator:curator-framework:2.10.0") {
        exclude module: "log4j"
        exclude module: "slf4j-log4j12"
    }
    compile "junit:junit:4.12"
    compile "com.google.guava:guava:18.0"
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "com.google.code.findbugs:jsr305:3.0.0"
    compile "commons-io:commons-io:2.4"

    testRuntime "org.codehaus.groovy:groovy-all:2.4.3"
    testRuntime "ch.qos.logback:logback-classic:1.1.3"
}

task javadocJar(type:Jar, dependsOn: javadoc){
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

task sourcesJar(type:Jar){
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options {
        links 'http://curator.apache.org/apidocs/',
              'http://docs.oracle.com/javase/8/docs/api/',
              'http://junit.org/javadoc/latest/',

              // the normal ZK docs omit several server-side classes,
              // including ones we use
              'http://people.apache.org/~larsgeorge/zookeeper-1075002/build/docs/dev-api/'
    }
}

signing {
    required { gradle.taskGraph.hasTask(":uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
               name 'curator-test-rule'
               packaging 'jar'
               description 'This project provides a JUnit TestRule that manages the startup and shutdown of the underlying ZooKeeperServer. The TestRule also includes a way of getting CuratorFramework instances that automatically connect and disconnect from the underlying ZooKeeperServer based on the scope of rule.'
               url 'https://github.com/palantir/curator-test-rule'

               scm {
                   url 'https://github.com/palantir/curator-test-rule'
                   connection 'scm:git:git@github.com:palantir/curator-test-rule.git'
                   developerConnection 'scm:git:git@github.com:palantir/curator-test-rule.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'justinuang'
                       name 'Justin Uang'
                   }
               }
           }
        }
    }
}
